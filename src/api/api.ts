// Generated by ts-to-zod
import { z } from "zod";

export const pullRequestSchema = z.object({
  kind: z.literal("PullRequest"),
  id: z.number(),
  url: z.string(),
  title: z.string(),
  createdEpochMillis: z.number(),
  authorUsername: z.string(),
  authorUrl: z.string(),
});
export type PullRequest = z.infer<typeof pullRequestSchema>;

export const pullRequestGroupNotYetFetchedSchema = z.object({
  kind: z.literal("PullRequestGroupNotYetFetched"),
});
export type PullRequestGroupNotYetFetched = z.infer<
  typeof pullRequestGroupNotYetFetchedSchema
>;
export const PULL_REQUEST_GROUP_NOT_YET_FETCHED: PullRequestGroupNotYetFetched =
  {
    kind: "PullRequestGroupNotYetFetched",
  };

export const pullRequestGroupFetchErrorSchema = z.object({
  kind: z.literal("PullRequestGroupFetchError"),
  errors: z.array(z.string()),
});
export type PullRequestGroupFetchError = z.infer<
  typeof pullRequestGroupFetchErrorSchema
>;

export const pullRequestGroupFetchBadCredentialsSchema = z.object({
  kind: z.literal("PullRequestGroupFetchBadCredentials"),
});
export type PullRequestGroupFetchBadCredentials = z.infer<
  typeof pullRequestGroupFetchBadCredentialsSchema
>;

export const pullRequestGroupSchema = z.object({
  kind: z.literal("PullRequestGroup"),
  fetchedAtEpochMillis: z.number(),
  pullRequests: z.array(pullRequestSchema),
});
export type PullRequestGroup = z.infer<typeof pullRequestGroupSchema>;

export const pullRequestGroupResultSchema = z.union([
  pullRequestGroupNotYetFetchedSchema,
  pullRequestGroupFetchBadCredentialsSchema,
  pullRequestGroupFetchErrorSchema,
  pullRequestGroupSchema,
]);
export type PullRequestGroupResult = z.infer<
  typeof pullRequestGroupResultSchema
>;

export const pullRequestSummarySchema = z.object({
  drafts: pullRequestGroupResultSchema,
  readyToSubmit: pullRequestGroupResultSchema,
  readyToReview: pullRequestGroupResultSchema,
  waitingForOthers: pullRequestGroupResultSchema,
});
export type PullRequestSummary = z.infer<typeof pullRequestSummarySchema>;
export const DEFAULT_PULL_REQUEST_SUMMARY: PullRequestSummary = {
  drafts: PULL_REQUEST_GROUP_NOT_YET_FETCHED,
  readyToReview: PULL_REQUEST_GROUP_NOT_YET_FETCHED,
  readyToSubmit: PULL_REQUEST_GROUP_NOT_YET_FETCHED,
  waitingForOthers: PULL_REQUEST_GROUP_NOT_YET_FETCHED,
};
export const getPullRequestGroups = (
  summary: PullRequestSummary
): readonly PullRequestGroupResult[] => Object.values(summary);

export const getPullRequestSummaryRequestSchema = z.object({
  kind: z.literal("GetPullRequestSummaryRequest"),
});
export type GetPullRequestSummaryRequest = z.infer<
  typeof getPullRequestSummaryRequestSchema
>;

export const getPullRequestSummaryResponseSchema = z.object({
  kind: z.literal("GetPullRequestSummaryResponse"),
  pullRequestSummary: pullRequestSummarySchema,
});
export type GetPullRequestSummaryResponse = z.infer<
  typeof getPullRequestSummaryResponseSchema
>;
